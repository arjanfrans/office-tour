{"version":3,"sources":["Game/Entity/Player.ts","Game/World.ts","Game/index.tsx","index.tsx"],"names":["Player","x","y","width","height","collisionType","CollisionType","Fixed","color","Color","Chartreuse","velocity","engine","delta","input","keyboard","isHeld","Input","Keys","W","Up","this","pos","S","Down","D","Right","A","Left","Actor","World","player","add","Game","ex","canvasElementId","world","map","TiledResource","loader","Loader","init","start","tileMap","getTileMap","id","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEaA,EAAb,kDAGI,aAA8C,IAAD,EAAjCC,EAAiC,uDAArB,IAAKC,EAAgB,uDAAJ,GAAI,4BACzC,cAAM,CACFD,IACAC,IACAC,MAAO,GACPC,OAAQ,GACRC,cAAeC,gBAAcC,MAC7BC,MAAOC,QAAMC,cATLC,SAAmB,GAEU,EAHjD,mDAckBC,EAAgBC,IACtBD,EAAOE,MAAMC,SAASC,OAAOC,QAAMC,KAAKC,IAAMP,EAAOE,MAAMC,SAASC,OAAOC,QAAMC,KAAKE,OACtFC,KAAKC,IAAIpB,GAAKmB,KAAKV,SAAWE,IAG9BD,EAAOE,MAAMC,SAASC,OAAOC,QAAMC,KAAKK,IAAMX,EAAOE,MAAMC,SAASC,OAAOC,QAAMC,KAAKM,SACtFH,KAAKC,IAAIpB,GAAKmB,KAAKV,SAAWE,IAG9BD,EAAOE,MAAMC,SAASC,OAAOC,QAAMC,KAAKO,IAAMb,EAAOE,MAAMC,SAASC,OAAOC,QAAMC,KAAKQ,UACtFL,KAAKC,IAAIrB,GAAKoB,KAAKV,SAAWE,IAG9BD,EAAOE,MAAMC,SAASC,OAAOC,QAAMC,KAAKS,IAAMf,EAAOE,MAAMC,SAASC,OAAOC,QAAMC,KAAKU,SACtFP,KAAKC,IAAIrB,GAAKoB,KAAKV,SAAWE,OA5B1C,GAA4BgB,SCCfC,EAAb,WAGI,WAAoBlB,GAAiB,yBAAjBA,SAAgB,KAFnBmB,YAEmB,EAChCV,KAAKU,OAAS,IAAI/B,EAJ1B,mDASQqB,KAAKT,OAAOoB,IAAIX,KAAKU,YAT7B,K,QCGaE,EAAb,iTAGcrB,EAAS,IAAIsB,SAAU,CACzB/B,MAAO,IACPC,OAAQ,IACR+B,gBAAiB,SAGfC,EAAQ,IAAIN,EAAMlB,GAClByB,EAAM,IAAIC,gBAAc,4BACxBC,EAAS,IAAIC,SAAO,CAACH,IAE3BD,EAAMK,OAbd,SAec7B,EAAO8B,MAAMH,GAf3B,OAiBcI,EAAUN,EAAIO,aAEpBhC,EAAOoB,IAAIW,GAnBnB,gIAwBQ,OAAO,4BAAQE,GAAG,aAxB1B,GAA0BC,IAAMC,WCDhCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.342fc006.chunk.js","sourcesContent":["import {Actor, CollisionType, Color, Engine, Input} from \"excalibur\";\n\nexport class Player extends Actor {\n    public readonly velocity: number = 0.1;\n\n    constructor(x: number = 150, y: number = 40) {\n        super({\n            x,\n            y,\n            width: 20,\n            height: 20,\n            collisionType: CollisionType.Fixed,\n            color: Color.Chartreuse\n        });\n    }\n\n    public update(engine: Engine, delta: number) {\n        if (engine.input.keyboard.isHeld(Input.Keys.W) || engine.input.keyboard.isHeld(Input.Keys.Up)) {\n            this.pos.y -= this.velocity * delta\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.S) || engine.input.keyboard.isHeld(Input.Keys.Down)) {\n            this.pos.y += this.velocity * delta\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.D) || engine.input.keyboard.isHeld(Input.Keys.Right)) {\n            this.pos.x += this.velocity * delta\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.A) || engine.input.keyboard.isHeld(Input.Keys.Left)) {\n            this.pos.x -= this.velocity * delta\n        }\n    }\n}\n","import {Engine} from \"excalibur\";\nimport {Player} from \"./Entity/Player\";\n\nexport class World {\n    private readonly player: Player;\n\n    constructor(private engine: Engine) {\n        this.player = new Player();\n    }\n\n    public init(): void\n    {\n        this.engine.add(this.player);\n    }\n}\n","import * as ex from 'excalibur'\nimport {Loader} from 'excalibur'\nimport React from \"react\";\nimport {World} from \"./World\";\nimport {TiledResource} from \"@excaliburjs/excalibur-tiled\";\n\nexport class Game extends React.Component<{}, {}>{\n    public async componentDidMount(): Promise<void>\n    {\n        const engine = new ex.Engine({\n            width: 800,\n            height: 600,\n            canvasElementId: 'game',\n        });\n\n        const world = new World(engine);\n        const map = new TiledResource(\"/assets/maps/level1.json\");\n        const loader = new Loader([map]);\n\n        world.init();\n\n        await engine.start(loader);\n\n        const tileMap = map.getTileMap();\n\n        engine.add(tileMap);\n    }\n\n    public render(): React.ReactNode\n    {\n        return <canvas id=\"game\"/>\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Game} from \"./Game\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}